name: Baboon Build

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  actions: write

jobs:
  build-unix:
    strategy:
      fail-fast: false
      matrix:
        # 1) don't forget about os entry in prepare-release
        # 2) see : https://github.com/actions/runner-images
        include:
          - target: linux-amd64
            os: ubuntu-latest
            runs-on: [ ]
            linux: true
          - target: linux-aarch64
            os: self-hosted
            runs-on: [ "ARM64" ]
            preconfigured: true
            nix-cache-disabled: true
            linux: true
          - target: macos-aarch64-14
            runs-on: [ ]
            os: macos-14 # yes, this is aarch64
            notlinux: true
          - target: macos-amd64-13
            os: macos-13 # this is amd64
            runs-on: [ ]
    name: ${{ matrix.target }}
    runs-on:
      - ${{ matrix.os }}
      - ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix (Linux)
        if: matrix.linux == true && matrix.preconfigured != true
        uses: nixbuild/nix-quick-install-action@v27
      - name: Install Nix (Mac)
        if: matrix.linux != true && matrix.preconfigured != true
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Restore and cache Nix store
        uses: nix-community/cache-nix-action@v5
        if: matrix.linux == true && matrix.preconfigured != true
        with:
          # restore and save a cache using this key
          primary-key: nix-${{ matrix.target }}-${{ hashFiles('**/*.nix') }}
          # if there's no cache hit, restore a cache by this prefix
          restore-prefixes-first-match: nix-${{ matrix.target }}-
          gc-max-store-size-linux: 1073741824
          # do purge caches
          purge: true
          # purge all versions of the cache
          purge-prefixes: cache-${{ matrix.target }}-
          # created more than this number of seconds ago relative to the start of the `Post Restore` phase
          purge-created: 0
          # except the version with the `primary-key`, if it exists
          purge-primary-key: never
      - name: Build (unix)
        run: ./nix-rebuild.sh
      - uses: actions/upload-artifact@v4
        with:
          name: baboon-${{ matrix.target }}
          path: |
            target/graalvm-native-image/**

  build-windows:
    strategy:
      fail-fast: false
      matrix:
        # 1) don't forget about os entry in prepare-release
        # 2) see : https://github.com/actions/runner-images
        include:
          - target: windows-amd64
            os: windows-2022
            runs-on: [ ]
            java-version: '23'
    name: ${{ matrix.target }}
    runs-on:
      - ${{ matrix.os }}
      - ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up GraalVM (Java ${{ matrix.java-version }})
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '${{ matrix.java-version }}'
          distribution: 'graalvm-community'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'sbt'
          native-image-job-reports: true
      - name: Build (windows)
        shell: bash
        run: bash ./local-rebuild.sh
      - uses: actions/upload-artifact@v4
        with:
          name: baboon-${{ matrix.target }}
          path: |
            target/graalvm-native-image/**

  prepare-release:
    runs-on: ubuntu-latest
    needs:
      - build-unix
      - build-windows
    steps:
      - uses: actions/checkout@v4
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: binaries
          pattern: baboon-*
      - name: Prepare layout
        run: |
          bash prepare-dist.sh ./binaries
      - uses: softprops/action-gh-release@v2
        id: create-release
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist-bin/**
            dist-zip/**
