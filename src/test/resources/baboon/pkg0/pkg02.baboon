model testpkg.pkg0

version "2.0.0"

enum T1_E1 {
 A
 C
}

foreign ObscureInt {
  cs = "System.Int32"
  java = "java.lang.Integer"
}

root data T1_E1_RET {
    f: T1_E1
}

data T1_D2 {
    f: str
    f1: opt[T1_E1]    
}

root data T1_D1 {
 f0: T1_D2
 f1: i08
 f3: str
 ft: ObscureInt
 fm: map[ObscureInt, ObscureInt] 
}

root data T1_Foreign_DTO {
 ft: ObscureInt
 fm: map[ObscureInt, ObscureInt]
}

//

data T2_D2 {
    f: str
    f1: opt[str]
}

root data T2_D1 {
  f0: T2_D2
}

//

root data T3_D1 {
  f1: str
}

//

root adt T4_A1 {
   data B1 {
       f: T3_D1
   }
   data B2 {
       f: T2_D1
   }
   data B4 {
       f: str
   }
}

//

enum T1_E2 {
 A
 B
 C
}

root data T1_E2_RET {
    f: T1_E2
}

//

root adt T5_A1 {
   data B1 {
       f: str
   }
   data B2 {
      f: i32
   }
}

//

data T6_D2 {
    f00: str
    f01: u08
    f02: u16
    f03: u32
    f04: u64

    f05: i08
    f06: i16
    f07: i32
    f08: i64

    f09: tso
    f10: tsu

    f11: f32
    f12: f64
    f13: f128

    f14: bit
}


root data T6_D1 {
    fSameBuiltin: i08
    fSameCustom: T6_D2
    fSameCustomOpt: opt[T6_D2]
    fSameCustomLst: lst[T6_D2]
    fSameCustomMap: map[str, T6_D2]

    fWrapOpt: opt[i08]
    fWrapLst: lst[i08]
    fWrapSet: set[i08]

    fSwapOptSet0: set[i08]
    fSwapOptSet1: set[str]
    fSwapOptSet2: set[T6_D2]
    fSwapOptLst0: lst[i08]
    fSwapOptLst1: lst[str]
    fSwapOptLst2: lst[T6_D2]


    fSwapLstSet: set[i08]
    fSwapSetLst: lst[i08]

    fNewOpt: opt[i32]
    fNewSet: set[i32]
    fNewLst: lst[i32]
    fNewMap: map[str, i32]

    fPrecex0: u16
    fPrecex1: opt[u16]
    fPrecex2: lst[u16]
    fPrecex3: set[u16]
    fPrecex4: map[u16, u16]
    fPrecex5: lst[u16]
    fPrecex6: lst[opt[u16]]

    fSwapPrecex0: lst[u32]
    fSwapPrecex1: set[u32]
    fSwapPrecex2: lst[u32]
}

//

root data T7_Empty {

}

//

root data T8_Removed_Fields {
}

//