model testpkg.pkg0

version "1.0.0"

data NotReferenced {}

enum T1_E1 {
 A
 B
}

root data T1_E1_RET {
    f: T1_E1
}

data T1_D2 {
    f: T1_E1
}

root data T1_D1 {
 f0: T1_D2
 f1: i08
 f2: i32
}

//

data T2_D2 {
    f: i08
    f1: str
}

root data T2_D1 {
  f0: T2_D2
}

//

root data T3_D1 {
  f0: str
}

//

root adt T4_A1 {
   data B1 {
       f: T3_D1
   }
   data B2 {
       f: T2_D1
   }
   data B3 {
       f: i08
   }
}

//

enum T1_E2 {
 A
 B
}

root data T1_E2_RET {
    f: T1_E2
}

//

root adt T5_A1 {
   data B1 {
       f: str
   }
}

//

data T6_D2 {
    f00: str
    f01: u08
    f02: u16
    f03: u32
    f04: u64

    f05: i08
    f06: i16
    f07: i32
    f08: i64
    
    f09: tso
    f10: tsu

    f11: f32
    f12: f64
    f13: f128

    f14: bit
}

root data T6_D1 {
    fSameBuiltin: i08
    fSameCustom: T6_D2
    fSameCustomOpt: opt[T6_D2]
    fSameCustomLst: lst[T6_D2]
    fSameCustomMap: map[str, T6_D2]

    fWrapOpt: i08
    fWrapLst: i08
    fWrapSet: i08

    fSwapOptSet0: opt[i08]
    fSwapOptSet1: opt[str]
    fSwapOptSet2: opt[T6_D2]
    fSwapOptLst0: opt[i08]
    fSwapOptLst1: opt[str]
    fSwapOptLst2: opt[T6_D2]

    fSwapLstSet: lst[i08]
    fSwapSetLst: set[i08]

    fPrecex0: u08
    fPrecex1: opt[u08]
    fPrecex2: lst[u08]
    fPrecex3: set[u08]
    fPrecex4: map[u08, u08]

    fSwapPrecex0: opt[u08]
    fSwapPrecex1: lst[u08]
    fSwapPrecex2: set[u08]
}

//

root data T7_Empty {

}

//

root data T8_Removed_Fields {
    f: u08
}

//

root data T9_test {
 //f1: opt[opt[str]] // must fail
 //f1: set[opt[str]] // must fail
 //f1: map[opt[str], str] // must fail

 f2: map[str, lst[opt[i32]]]
 f3: opt[lst[opt[str]]]
 f4: opt[lst[opt[T8_Removed_Fields]]]

 f5: map[str, lst[opt[T8_Removed_Fields]]]
 f6: map[str, lst[opt[str]]]
}

//

root data T10_D1 {
   + T10_A1.B1
   f2: i08
}

adt T10_A1 {
   data B1 {
       f1: T3_D1
   }
}

//

data _To_Remove {
 f6: map[str, lst[opt[str]]]
}

root data T11_D1 {
  // f: _To_Remove // will fail
  + T9_test
  - _To_Remove
  - f5: map[str, lst[opt[T8_Removed_Fields]]]
}

//

data T12_left {
    f1: str
    f2: i32
    f3: f64
}

data T12_right {
    f5: tsu
    f2: i32
    f6: tso
}

root data T12_1 {
  + T12_left
  ^ T12_right
}

root data T12_2 {
  + T12_right
  ^ T12_left
}

//

enum T13_1 {
  A1 = 1
}

root data T13_2 {
  f: map[T13_1, i32]
}